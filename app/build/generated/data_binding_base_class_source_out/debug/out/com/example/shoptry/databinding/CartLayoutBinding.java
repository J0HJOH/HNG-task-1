// Generated by view binder compiler. Do not edit!
package com.example.shoptry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoptry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CartLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton addQuantity;

  @NonNull
  public final ImageView cartImage;

  @NonNull
  public final ImageButton deleteProduct;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView productName;

  @NonNull
  public final TextView quantity;

  @NonNull
  public final ImageButton reduceQuantity;

  private CartLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton addQuantity,
      @NonNull ImageView cartImage, @NonNull ImageButton deleteProduct, @NonNull TextView price,
      @NonNull TextView productName, @NonNull TextView quantity,
      @NonNull ImageButton reduceQuantity) {
    this.rootView = rootView;
    this.addQuantity = addQuantity;
    this.cartImage = cartImage;
    this.deleteProduct = deleteProduct;
    this.price = price;
    this.productName = productName;
    this.quantity = quantity;
    this.reduceQuantity = reduceQuantity;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CartLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CartLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cart_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CartLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_quantity;
      ImageButton addQuantity = ViewBindings.findChildViewById(rootView, id);
      if (addQuantity == null) {
        break missingId;
      }

      id = R.id.cart_image;
      ImageView cartImage = ViewBindings.findChildViewById(rootView, id);
      if (cartImage == null) {
        break missingId;
      }

      id = R.id.delete_product;
      ImageButton deleteProduct = ViewBindings.findChildViewById(rootView, id);
      if (deleteProduct == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.product_name;
      TextView productName = ViewBindings.findChildViewById(rootView, id);
      if (productName == null) {
        break missingId;
      }

      id = R.id.quantity;
      TextView quantity = ViewBindings.findChildViewById(rootView, id);
      if (quantity == null) {
        break missingId;
      }

      id = R.id.reduce_quantity;
      ImageButton reduceQuantity = ViewBindings.findChildViewById(rootView, id);
      if (reduceQuantity == null) {
        break missingId;
      }

      return new CartLayoutBinding((ConstraintLayout) rootView, addQuantity, cartImage,
          deleteProduct, price, productName, quantity, reduceQuantity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
