// Generated by view binder compiler. Do not edit!
package com.example.shoptry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoptry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView brand;

  @NonNull
  public final ImageButton favBtn;

  @NonNull
  public final ImageView image;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView size;

  @NonNull
  public final TextView text;

  private ProductItemBinding(@NonNull CardView rootView, @NonNull TextView brand,
      @NonNull ImageButton favBtn, @NonNull ImageView image, @NonNull TextView name,
      @NonNull TextView price, @NonNull TextView size, @NonNull TextView text) {
    this.rootView = rootView;
    this.brand = brand;
    this.favBtn = favBtn;
    this.image = image;
    this.name = name;
    this.price = price;
    this.size = size;
    this.text = text;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.brand;
      TextView brand = ViewBindings.findChildViewById(rootView, id);
      if (brand == null) {
        break missingId;
      }

      id = R.id.fav_btn;
      ImageButton favBtn = ViewBindings.findChildViewById(rootView, id);
      if (favBtn == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.size;
      TextView size = ViewBindings.findChildViewById(rootView, id);
      if (size == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      return new ProductItemBinding((CardView) rootView, brand, favBtn, image, name, price, size,
          text);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
